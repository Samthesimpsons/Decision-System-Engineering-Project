d <- split(Ocoords1,rep(1:10,each=25))
library(gmapsdistance)
library(gmapsdistance)
library(dplyr)
library(writexl)
d <- split(Ocoords1,rep(1:10,each=25))
# List of Coordinates for Origin (Assumed to be a list)
# Sample List (E.g. 3 coordinates)
origin <- c("1.313832+103.929247",
"1.295176+103.827696",
"1.333906+103.7874779")
# Changi Airport Coordinates
destination <- rep("1.3644+103.9915",3)
setwd("C:/Users/samue/Downloads")
googledistmkey <- read.table("C:/Users/samue/Downloads/googledistmkey.txt", quote="\"", comment.char="")
View(googledistmkey)
library(gmapsdistance)
library(tidyverse)
source("setAPIket.R")
source("setAPIkey.R")
APIkey
getOption("APIkey")
# Setting the API key:
key <- getOption("APIkey")
# References: (Documentation of gmapsdistance library and google map distance matrix API)
# https://cran.rstudio.com/web/packages/gmapsdistance/readme/README.html
# https://developers.google.com/maps/documentation/distance-matrix/overview?hl=en
# Getting Started
library(gmapsdistance)
library(tidyverse)
source("setAPIkey.R")
# Setting the API key:
set.api.key(getOption("APIkey"))
# List of Coordinates for Origin (Assumed to be a list)
# Sample List (E.g. 3 coordinates)
origin <- c("1.313832+103.929247",
"1.295176+103.827696",
"1.333906+103.7874779")
# Changi Airport Coordinates
destination <- rep("1.3644+103.9915",3)
# Get request function for distance
## The traffic_model parameter may only be specified for requests where the
## travel mode is driving, and where the request includes a departure_time,
## and only if the request includes an API key
results <- gmapsdistance(origin = origin,
destination = destination,
mode = "driving",
traffic_model = "best_guess",
dep_time = "08:30:00")
# References: (Documentation of gmapsdistance library and google map distance matrix API)
# https://cran.rstudio.com/web/packages/gmapsdistance/readme/README.html
# https://developers.google.com/maps/documentation/distance-matrix/overview?hl=en
# Getting Started
library(gmapsdistance)
library(tidyverse)
source("setAPIkey.R")
# Setting the API key:
set.api.key(getOption("APIkey"))
# List of Coordinates for Origin (Assumed to be a list)
# Sample List (E.g. 3 coordinates)
origin <- c("1.313832+103.929247",
"1.295176+103.827696",
"1.333906+103.7874779")
# Changi Airport Coordinates
destination <- rep("1.3644+103.9915",3)
# Get request function for distance
results <- gmapsdistance(origin = origin,
destination = destination,
mode = "driving",
traffic_model = "best_guess",
dep_date = "2021-06-17",
dep_time = "08:30:00")
=
# References: (Documentation of gmapsdistance library and google map distance matrix API)
# https://cran.rstudio.com/web/packages/gmapsdistance/readme/README.html
# https://developers.google.com/maps/documentation/distance-matrix/overview?hl=en
# Getting Started
library(gmapsdistance)
library(tidyverse)
source("setAPIkey.R")
# Setting the API key:
set.api.key(getOption("APIkey"))
# List of Coordinates for Origin (Assumed to be a list)
# Sample List (E.g. 3 coordinates)
ori <- c("1.313832+103.929247",
"1.295176+103.827696",
"1.333906+103.7874779")
# Changi Airport Coordinates
dest <- rep("1.3644+103.9915",3)
# Get request function for distance
results <- gmapsdistance(origin = ori,
destination = dest,
mode = "driving",
traffic_model = "best_guess",
dep_date = "2021-06-17",
dep_time = "08:30:00")
=
# References: (Documentation of gmapsdistance library and google map distance matrix API)
# https://cran.rstudio.com/web/packages/gmapsdistance/readme/README.html
# https://developers.google.com/maps/documentation/distance-matrix/overview?hl=en
# Getting Started
library(gmapsdistance)
library(tidyverse)
source("setAPIkey.R")
# Setting the API key:
set.api.key(getOption("APIkey"))
# List of Coordinates for Origin (Assumed to be a list)
# Sample List (E.g. 3 coordinates)
ori <- c("1.313832+103.929247",
"1.295176+103.827696",
"1.333906+103.7874779")
# Changi Airport Coordinates
dest <- rep("1.3644+103.9915",3)
# Get request function for distance
results <- gmapsdistance(origin = ori,
destination = dest,
mode = "driving",
traffic_model = "best_guess",
dep_date = "2021-06-17",
dep_time = "08:30:00")
View(results)
results
results$Distance
# Distance in m
results$Time
# Timing in seconds
results$Time[0]
View(results)
# Timing in seconds
results$Time.Time.1.3644+103.9915
# Timing in seconds
results$Time.Time.1.3644+103.9915[0]
ncol(results$Time)
colnames(results$Time)
# Distance in m
distance <- results$Distance
# Timing in seconds
timings <- results$Time
timings$`Time.1.3644+103.9915`
setwd("C:/Users/samue/OneDrive - Singapore University of Technology and Design (1)/SUTD Terms/Term 5/Engineering & System Architecture/Week 13 - R Shiny Game Project/Glow Up")
